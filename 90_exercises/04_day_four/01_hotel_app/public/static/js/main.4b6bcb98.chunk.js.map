{"version":3,"sources":["components/Row.tsx","actions/actionConstants.tsx","actions/hotelActions.tsx","components/HotelList.tsx","components/Navbar.tsx","models/HotelInfo.tsx","components/HotelForm.tsx","components/DetailsInfo.tsx","components/EditDetails.tsx","components/Details.tsx","App.tsx","reportWebVitals.ts","reducers/hotelReducer.tsx","index.tsx"],"names":["Row","props","url","item","id","to","name","address","city","country","onClick","removeFromList","LOADING","STOP_LOADING","FETCH_HOTELS_SUCCESS","FETCH_HOTELS_FAILED","ADD_HOTEL_SUCCESS","ADD_HOTEL_FAILED","REMOVE_HOTEL_SUCCESS","REMOVE_HOTEL_FAILED","EDIT_HOTEL_SUCCESS","EDIT_HOTEL_FAILED","handleFetch","req","act","dispatch","loadingAction","type","actionConstants","list","error","fetch","then","response","ok","json","data","getList","catch","console","log","action","status","request","Request","method","headers","HotelList","useSelector","state","useDispatch","hotelList","map","style","margin","textAlign","Navbar","loading","header","backgroundColor","height","listStyleType","HotelInfo","comment","this","HotelForm","useState","setState","onChange","event","currentTarget","value","onSubmit","preventDefault","body","JSON","stringify","addToList","htmlFor","DetailsInfo","hotel","editMode","EditDetails","e","editItem","cancel","withRouter","index","edit","useEffect","parseInt","match","params","i","length","width","history","push","App","className","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","loginReducer","store","createStore","hotelReducer","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b6bcb98.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport HotelInfo from '../models/HotelInfo';\r\n\r\ninterface Props {\r\n\titem:HotelInfo;\r\n\tremoveFromList(id:number):void;\r\n}\r\nconst Row:React.FC<Props> = (props:Props) => {\r\n\r\n\tlet url = \"/hotel/\"+props.item.id\r\n\treturn(\r\n\t\t<tr>\r\n\t\t\t<td><Link to={url}>{props.item.name}</Link></td>\r\n\t\t\t<td>{props.item.address}</td>\r\n\t\t\t<td>{props.item.city}</td>\r\n\t\t\t<td>{props.item.country}</td>\r\n\t\t\t<td><button onClick={() => props.removeFromList(props.item.id)}>Remove</button></td>\r\n\t\t</tr>\t\r\n\t)\r\n\t\r\n}\r\n\r\nexport default Row;","//common\r\n\r\nexport const LOADING = \"LOADING\";\r\nexport const STOP_LOADING = \"STOP_LOADING\";\r\n\r\n//HOTEL\r\n\r\nexport const FETCH_HOTELS_SUCCESS = \"FETCH_HOTELS_SUCCESS\";\r\nexport const FETCH_HOTELS_FAILED = \"FETCH_HOTELS_FAILED\";\r\nexport const ADD_HOTEL_SUCCESS = \"ADD_HOTEL_SUCCESS\";\r\nexport const ADD_HOTEL_FAILED = \"ADD_HOTEL_FAILED\";\r\nexport const REMOVE_HOTEL_SUCCESS = \"REMOVE_HOTEL_SUCCESS\";\r\nexport const REMOVE_HOTEL_FAILED = \"REMOVE_HOTEL_FAILED\";\r\nexport const EDIT_HOTEL_SUCCESS = \"EDIT_HOTEL_SUCCESS\";\r\nexport const EDIT_HOTEL_FAILED = \"EDIT_HOTEL_FAILED\";\r\n\r\n","import * as actionConstants from './actionConstants';\r\nimport {ThunkDispatch} from 'redux-thunk';\r\nimport HotelInfo from '../models/HotelInfo';\r\nimport {AnyAction} from 'redux';\r\n\r\n\r\n//ASYNC ACTION CREATORS\r\nconst handleFetch = (req:Request,act:string,dispatch:ThunkDispatch<any,any,AnyAction>) => {\r\n\tlet loadingAction:AnyAction = {\r\n\t\ttype:actionConstants.LOADING,\r\n\t\tlist:[],\r\n\t\terror:\"\"\t\t\r\n\t}\r\n\tdispatch(loadingAction);\r\n\tfetch(req).then(response => {\r\n\t\tloadingAction.type = actionConstants.STOP_LOADING;\r\n\t\tdispatch(loadingAction)\r\n\t\tif(response.ok) {\r\n\t\t\tresponse.json().then(data => {\r\n\t\t\t\tif(act === \"getlist\") {\r\n\t\t\t\t\tlet list = data as HotelInfo[];\r\n\t\t\t\t\tlet action:AnyAction = {\r\n\t\t\t\t\t\ttype:actionConstants.FETCH_HOTELS_SUCCESS,\r\n\t\t\t\t\t\tlist:list,\r\n\t\t\t\t\t\terror:\"\"\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdispatch(action);\r\n\t\t\t\t} \r\n\t\t\t\tif(act === \"addtolist\") {\r\n\t\t\t\t\tlet action:AnyAction = {\r\n\t\t\t\t\t\ttype:actionConstants.ADD_HOTEL_SUCCESS,\r\n\t\t\t\t\t\tlist:[],\r\n\t\t\t\t\t\terror:\"\"\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdispatch(action);\r\n\t\t\t\t\tdispatch(getList());\r\n\t\t\t\t}\r\n\t\t\t\tif(act === \"removefromlist\") {\r\n\t\t\t\t\tlet action:AnyAction = {\r\n\t\t\t\t\t\ttype:actionConstants.REMOVE_HOTEL_SUCCESS,\r\n\t\t\t\t\t\tlist:[],\r\n\t\t\t\t\t\terror:\"\"\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdispatch(action);\r\n\t\t\t\t\tdispatch(getList());\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tif(act === \"edititem\") {\r\n\t\t\t\t\tlet action:AnyAction = {\r\n\t\t\t\t\t\ttype:actionConstants.EDIT_HOTEL_SUCCESS,\r\n\t\t\t\t\t\tlist:[],\r\n\t\t\t\t\t\terror:\"\"\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdispatch(action);\r\n\t\t\t\t\tdispatch(getList());\r\n\t\t\t\t}\r\n\t\t\t}).catch(error => {\r\n\t\t\t\tconsole.log(\"Failed to parse JSON:\"+error);\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\t\tif(act === \"getlist\") {\r\n\t\t\t\t\tlet action:AnyAction = {\r\n\t\t\t\t\t\ttype:actionConstants.FETCH_HOTELS_FAILED,\r\n\t\t\t\t\t\tlist:[],\r\n\t\t\t\t\t\terror:\"Fetch hotels failed. Server responded with a status:\"+response.status\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdispatch(action);\r\n\t\t\t\t} \r\n\t\t\t\tif(act === \"addtolist\") {\r\n\t\t\t\t\tlet action:AnyAction = {\r\n\t\t\t\t\t\ttype:actionConstants.ADD_HOTEL_FAILED,\r\n\t\t\t\t\t\tlist:[],\r\n\t\t\t\t\t\terror:\"Adding a hotel failed. Server responded with a status:\"+response.status\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdispatch(action);\r\n\t\t\t\t}\r\n\t\t\t\tif(act === \"removefromlist\") {\r\n\t\t\t\t\tlet action:AnyAction = {\r\n\t\t\t\t\t\ttype:actionConstants.REMOVE_HOTEL_FAILED,\r\n\t\t\t\t\t\tlist:[],\r\n\t\t\t\t\t\terror:\"Remove a hotel failed. Server responded with a status:\"+response.status\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdispatch(action);\t\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tif(act === \"edititem\") {\r\n\t\t\t\t\tlet action:AnyAction = {\r\n\t\t\t\t\t\ttype:actionConstants.EDIT_HOTEL_FAILED,\r\n\t\t\t\t\t\tlist:[],\r\n\t\t\t\t\t\terror:\"Editing a hotel  failed. Server responded with a status:\"+response.status\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdispatch(action);\r\n\t\t\t\t}\r\n\t\t}\r\n\t}).catch(error => {\r\n\t\tconsole.log(error);\r\n\t})\r\n} \r\n\t\r\nexport const getList = () => {\r\n\treturn (dispatch:ThunkDispatch<any,any,AnyAction>) => {\t\r\n\t\tconst request = new Request(\"/api/hotel\",{\r\n\t\t\tmethod:\"GET\",\r\n\t\t\theaders:{\r\n\t\t\t\t\"Content-type\":\"application/json\"\r\n\t\t\t}\r\n\t\t})\r\n\t\thandleFetch(request,\"getlist\",dispatch);\r\n\t}\r\n}\r\n\r\nexport const addToList = (item:HotelInfo) => {\r\n\treturn (dispatch:ThunkDispatch<any,any,AnyAction>) => {\t\t\r\n\t\tconst request = new Request(\"/api/hotel\",{\r\n\t\t\tmethod:\"POST\",\r\n\t\t\theaders:{\r\n\t\t\t\t\"Content-type\":\"application/json\"\r\n\t\t\t},\r\n\t\t\tbody:JSON.stringify(item)\r\n\t\t})\r\n\t\thandleFetch(request,\"addtolist\", dispatch);\r\n\t}\r\n}\t\r\n\r\nexport const removeFromList = (id:number) => {\r\n\treturn (dispatch:ThunkDispatch<any,any,AnyAction>) => {\t\r\n\t\tconst request = new Request(\"/api/hotel/\"+id,{\r\n\t\t\tmethod:\"DELETE\",\r\n\t\t\theaders:{\r\n\t\t\t\t\"Content-type\":\"application/json\"\r\n\t\t\t}\r\n\t\t})\r\n\t\thandleFetch(request,\"removefromlist\", dispatch);\r\n\t}\r\n}\r\n\r\nexport const editItem = (item:HotelInfo) => {\r\n\treturn (dispatch:ThunkDispatch<any,any,AnyAction>) => {\t\r\n\t\tconst request = new Request(\"/api/hotel/\"+item.id,{\r\n\t\t\tmethod:\"PUT\",\r\n\t\t\theaders:{\r\n\t\t\t\t\"Content-type\":\"application/json\"\r\n\t\t\t},\r\n\t\t\tbody:JSON.stringify(item)\r\n\t\t})\r\n\t\thandleFetch(request,\"edititem\",dispatch);\t\t\r\n\t}\r\n}","import React from 'react'\r\nimport Row from './Row';\r\nimport HotelInfo from '../models/HotelInfo';\r\nimport {removeFromList} from '../actions/hotelActions';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {AnyAction} from 'redux';\r\nimport {ThunkDispatch} from 'redux-thunk';\r\n\r\ninterface ListState {\r\n\tlist:HotelInfo[]\r\n}\r\n \r\nconst HotelList:React.FC<{}> = () => {\r\n\r\n\tconst listState = (state:ListState) => state.list\r\n\t\r\n\tconst list = useSelector(listState);\r\n\t\r\n\tconst dispatch:ThunkDispatch<any,any,AnyAction> = useDispatch()\r\n\t\r\n\tlet hotelList = list.map((item) => {\r\n\t\treturn (\r\n\t\t\t<Row key={item.id} item={item} removeFromList={() => dispatch(removeFromList(item.id))}/>\r\n\t\t)\r\n\t})\r\n\treturn(\r\n\t<div style={{margin:\"auto\",textAlign:\"center\"}}>\r\n\t\t<table>\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th>Name</th>\r\n\t\t\t\t\t<th>Address</th>\r\n\t\t\t\t\t<th>City</th>\r\n\t\t\t\t\t<th>Country</th>\r\n\t\t\t\t\t<th>Remove</th>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tbody>\r\n\t\t\t\t{hotelList}\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\t</div>\r\n\t)\r\n\t\r\n}\r\n\r\nexport default HotelList;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {useSelector} from 'react-redux';\r\nimport HotelInfo from '../models/HotelInfo';\r\n\r\ninterface LoadingState {\r\n\tloading:boolean;\r\n}\r\n\r\ninterface ErrorState {\r\n\terror:string\r\n}\r\n\r\nconst Navbar:React.FC<{}> = () => {\r\n\t \r\n\tconst loadingState = (state:LoadingState) => state.loading\r\n\tconst errorState = (state:ErrorState) => state.error\r\n\t\r\n\tconst loading = useSelector(loadingState);\r\n\tconst error = useSelector(errorState);\r\n\t\t\t\r\n\tlet header = <h4>Hotel app</h4>\r\n\tif(loading) {\r\n\t\theader = <h4>Loading ...</h4>\r\n\t}\r\n\tif(error) {\r\n\t\theader = <h4>{error}</h4>\r\n\t}\r\n\tlet navStyle={backgroundColor:\"lightblue\",height:120}\r\n\treturn(\r\n\t\t<div style={navStyle}>\r\n\t\t\t{header}\r\n\t\t\t<ul style={{listStyleType:\"none\"}}>\r\n\t\t\t\t<li><Link to=\"/\">Hotel List</Link></li>\r\n\t\t\t\t<li><Link to=\"/form\">Add to list</Link></li>\r\n\t\t\t</ul>\t\r\n\t\t</div>\r\n\t)\r\n\t\r\n}\r\n\r\nexport default Navbar;","export default class HotelInfo {\r\n\r\n\tid:number = 0;\r\n\tname:string = \"\";\r\n\taddress:string = \"\";\r\n\tcity:string = \"\";\r\n\tcountry:string = \"\";\r\n\tcomment:string = \"\";\r\n\t\r\n\tconstructor(id:number,name:string,address:string,city:string,country:string,comment:string) {\r\n\t\tthis.id = id;\r\n\t\tthis.name = name;\r\n\t\tthis.address = address;\r\n\t\tthis.city = city;\r\n\t\tthis.country = country;\r\n\t\tthis.comment = comment;\r\n\t}\r\n\t\r\n}","import React,{useState} from 'react';\r\nimport HotelInfo from '../models/HotelInfo';\r\nimport {addToList} from '../actions/hotelActions';\r\nimport {useDispatch} from 'react-redux';\r\nimport {AnyAction} from 'redux';\r\nimport {ThunkDispatch} from 'redux-thunk';\r\n\r\n\r\ninterface State {\r\n\tname:string;\r\n\taddress:string;\r\n\tcity:string;\r\n\tcountry:string;\r\n\tcomment:string;\r\n}\r\n\r\nconst HotelForm:React.FC<{}> = () => {\r\n\r\n\tconst [state,setState] = useState<State>({\r\n\t\tname:\"\",\r\n\t\taddress:\"\",\r\n\t\tcity:\"\",\r\n\t\tcountry:\"\",\r\n\t\tcomment:\"\"\r\n\t})\r\n\t\r\n\tconst dispatch:ThunkDispatch<any,any,AnyAction> = useDispatch();\r\n\r\n\tconst onChange = (event:React.FormEvent<HTMLInputElement>) => {\r\n\t\tsetState({\r\n\t\t\t...state,\r\n\t\t\t[event.currentTarget.name]:event.currentTarget.value\r\n\t\t});\r\n\t}\r\n\t\r\n\tconst onSubmit = (event:React.SyntheticEvent) => {\r\n\t\tevent.preventDefault();\r\n\t\tlet item = new HotelInfo(0,state.name,state.address,state.city,state.country,state.comment);\r\n\t\tdispatch(addToList(item));\r\n\t\tsetState({\r\n\t\t\tname:\"\",\r\n\t\t\taddress:\"\",\r\n\t\t\tcity:\"\",\r\n\t\t\tcountry:\"\",\r\n\t\t\tcomment:\"\"\r\n\t\t})\r\n\t}\r\n\r\n\treturn(\r\n\t\t<form onSubmit={onSubmit}>\r\n\t\t\t<label htmlFor=\"name\">Name:</label>\r\n\t\t\t<input type=\"text\"\r\n\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tvalue={state.name}/>\r\n\t\t\t<br/>\r\n\t\t\t<label htmlFor=\"address\">Address:</label>\r\n\t\t\t<input type=\"text\"\r\n\t\t\t\t\tname=\"address\"\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tvalue={state.address}/>\r\n\t\t\t<br/>\r\n\t\t\t<label htmlFor=\"city\">City:</label>\r\n\t\t\t<input type=\"text\"\r\n\t\t\t\t\tname=\"city\"\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tvalue={state.city}/>\r\n\t\t\t<br/>\r\n\t\t\t<label htmlFor=\"country\">Country:</label>\r\n\t\t\t<input type=\"text\"\r\n\t\t\t\t\tname=\"country\"\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tvalue={state.country}/>\r\n\t\t\t<br/>\r\n\t\t\t<label htmlFor=\"comment\">Comment:</label>\r\n\t\t\t<input type=\"text\"\r\n\t\t\t\t\tname=\"comment\"\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tvalue={state.comment}/>\r\n\t\t\t<br/>\t\t\t\t\r\n\t\t\t<input type=\"submit\" value=\"Add\"/>\r\n\t\t</form>\r\n\t)\r\n\r\n}\r\n\r\nexport default HotelForm;","import React from 'react';\r\nimport HotelInfo from '../models/HotelInfo';\r\n\r\ninterface Props {\r\n\teditMode():void;\r\n\thotel:HotelInfo;\r\n}\r\n\r\nconst DetailsInfo:React.FC<Props> = (props:Props) => {\r\n\t\r\n\treturn(\r\n\t\t<>\r\n\t\t\t\t<h3>{props.hotel.name}</h3>\r\n\t\t\t\t<p>Address:{props.hotel.address}</p>\r\n\t\t\t\t<p>City:{props.hotel.city}</p>\r\n\t\t\t\t<p>Country:{props.hotel.country}</p>\r\n\t\t\t\t<p>Comment:{props.hotel.comment}</p>\r\n\t\t\t\t<button onClick={props.editMode}>Edit</button>\r\n\t\t</>\r\n\t)\r\n\t\r\n}\r\n\r\nexport default DetailsInfo;","import React,{useState} from 'react';\r\nimport HotelInfo from '../models/HotelInfo';\r\n\r\ninterface Props {\r\n\thotel:HotelInfo;\r\n\teditItem(item:HotelInfo):void;\r\n\tcancel():void;\r\n}\r\n\r\ninterface State {\r\n\tname:string;\r\n\taddress:string;\r\n\tcity:string;\r\n\tcountry:string;\r\n\tcomment:string;\t\r\n}\r\n\r\nconst EditDetails:React.FC<Props> = (props:Props) =>  {\r\n\tconst [state,setState] = useState<State>({\r\n\t\tname:props.hotel.name,\r\n\t\taddress:props.hotel.address,\r\n\t\tcity:props.hotel.city,\r\n\t\tcountry:props.hotel.country,\r\n\t\tcomment:props.hotel.comment\r\n\t})\r\n\t\r\n\tconst onChange = (event:React.FormEvent<HTMLInputElement>) => {\r\n\t\tsetState({\r\n\t\t\t...state,\r\n\t\t\t[event.currentTarget.name]:event.currentTarget.value\r\n\t\t});\r\n\t}\r\n\t\r\n\tconst onEdit = (e:React.SyntheticEvent) => {\r\n\t\tlet item = new HotelInfo(props.hotel.id,state.name,state.address,state.city,state.country,state.comment);\r\n\t\tprops.editItem(item);\r\n\t\tsetState({\r\n\t\t\tname:\"\",\r\n\t\t\taddress:\"\",\r\n\t\t\tcity:\"\",\r\n\t\t\tcountry:\"\",\r\n\t\t\tcomment:\"\"\r\n\t\t})\r\n\t}\r\n\t\r\n\tconst onCancel = (e:React.SyntheticEvent) => {\r\n\t\tprops.cancel();\r\n\t}\r\n\t\r\n\treturn(\r\n\t\t<form>\r\n\t\t\t<label htmlFor=\"name\">Name:</label>\r\n\t\t\t<input type=\"text\"\r\n\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tvalue={state.name}/>\r\n\t\t\t<br/>\r\n\t\t\t<label htmlFor=\"address\">Address:</label>\r\n\t\t\t<input type=\"text\"\r\n\t\t\t\t\tname=\"address\"\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tvalue={state.address}/>\r\n\t\t\t<br/>\r\n\t\t\t<label htmlFor=\"city\">City:</label>\r\n\t\t\t<input type=\"text\"\r\n\t\t\t\t\tname=\"city\"\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tvalue={state.city}/>\r\n\t\t\t<br/>\r\n\t\t\t<label htmlFor=\"country\">Country:</label>\r\n\t\t\t<input type=\"text\"\r\n\t\t\t\t\tname=\"country\"\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tvalue={state.country}/>\r\n\t\t\t<br/>\r\n\t\t\t<label htmlFor=\"comment\">Comment:</label>\r\n\t\t\t<input type=\"text\"\r\n\t\t\t\t\tname=\"comment\"\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tvalue={state.comment}/>\r\n\t\t\t<br/>\t\t\t\t\r\n\t\t\t<button name=\"edit\" onClick={onEdit}>Edit</button>\r\n\t\t\t<button name=\"cancel\" onClick={onCancel}>Cancel</button>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default EditDetails;","import React,{useEffect,useState} from 'react';\r\nimport {withRouter,RouteComponentProps} from 'react-router-dom'\r\nimport HotelInfo from '../models/HotelInfo';\r\nimport DetailsInfo from './DetailsInfo';\r\nimport EditDetails from './EditDetails';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport {AnyAction} from 'redux';\r\nimport {ThunkDispatch} from 'redux-thunk';\r\nimport {editItem} from '../actions/hotelActions';\r\n\r\ninterface MatchDetails {\r\n\tid:string;\r\n}\r\n\r\ninterface Props extends RouteComponentProps<MatchDetails>  {\r\n}\r\n\r\n\r\ninterface State {\r\n\tindex:number;\r\n\tedit:boolean\r\n}\r\n\r\ninterface ListState {\r\n\tlist:HotelInfo[]\r\n}\r\n\r\n\r\nconst Details:React.FC<Props> = (props:Props) =>  {\r\n\t\t\r\n\tconst listState = (state:ListState) => state.list\r\n\t\r\n\tconst list = useSelector(listState);\r\n\t\r\n\tconst dispatch:ThunkDispatch<any,any,AnyAction> = useDispatch()\r\n \t\t\t\t\t\r\n\tconst [state,setState] = useState<State>({\r\n\t\tindex:0,\r\n\t\tedit:false\r\n\t})\r\n\t\r\n\tuseEffect(() => {\r\n\t\tlet id:number = parseInt(props.match.params.id,10);\r\n\t\tfor(let i=0;i<list.length;i++) {\r\n\t\t\tif(id === list[i].id) {\r\n\t\t\t\tsetState({\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tindex:i\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t},[]);\r\n\t\r\n\tconst editMode = () => {\r\n\t\tsetState({\r\n\t\t\t...state,\r\n\t\t\tedit:true\r\n\t\t})\r\n\t} \r\n\t\r\n\tconst cancel = () => {\r\n\t\tsetState({\r\n\t\t\t...state,\r\n\t\t\tedit:false\r\n\t\t})\r\n\t}\r\n\t\r\n\tconst edit = (item:HotelInfo) => {\r\n\t\tdispatch(editItem(item));\r\n\t\tcancel();\r\n\t\tprops.history.push(\"/\");\r\n\t}\r\n\r\n\t\r\n\tlet style:React.CSSProperties = {\r\n\t\twidth:200,\r\n\t\theight:300,\r\n\t\tbackgroundColor:\"lightgreen\",\r\n\t\tmargin:\"auto\",\r\n\t\ttextAlign:\"center\"\r\n\t}\r\n\tlet hotel = list[state.index];\r\n\tif(!state.edit) {\r\n\t\treturn(\r\n\t\t\t<div style={style}>\r\n\t\t\t\t<DetailsInfo hotel={hotel} editMode={editMode}/>\r\n\t\t\t</div>\t\r\n\t\t)\r\n\t} else {\r\n\t\treturn(\r\n\t\t\t<div style={style}>\r\n\t\t\t\t<EditDetails hotel={hotel} editItem={edit}  cancel={cancel}/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\t\r\n}\r\n\r\nexport default withRouter(Details);","import React,{useEffect} from 'react';\nimport './App.css';\nimport HotelList from './components/HotelList';\nimport Navbar from './components/Navbar';\nimport HotelForm from './components/HotelForm';\nimport Details from './components/Details';\nimport {Route,Switch} from 'react-router-dom';\nimport {useDispatch} from 'react-redux';\nimport {ThunkDispatch} from 'redux-thunk';\nimport {AnyAction} from 'redux';\nimport {getList} from './actions/hotelActions';\n\nconst App:React.FC<{}> = () => {\n\t\n\tconst dispatch:ThunkDispatch<any,any,AnyAction> = useDispatch();\n\t\n\tuseEffect(() => {\n\t\tdispatch(getList());\n\t},[])\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Navbar/>\n\t\t\t<hr/>\n\t\t\t<Switch>\t\n\t\t\t\t<Route exact path=\"/\" render={() => \n\t\t\t\t\t(<HotelList />)\n\t\t\t\t}/>\n\t\t\t\t<Route path=\"/form\" render={() => \n\t\t\t\t\t(<HotelForm />)\n\t\t\t\t}/>\n\t\t\t\t<Route path=\"/hotel/:id\" render={() => \n\t\t\t\t\t(<Details />)\n\t\t\t\t}/>\n\t\t\t</Switch>\n\t\t</div>\n\t);\n\t\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionConstants from '../actions/actionConstants';\r\nimport {HotelState} from './stateTypes';\r\nimport {AnyAction} from 'redux';\r\n\r\nconst initialState:HotelState = {\r\n\tloading:false,\r\n\tlist:[],\r\n\terror:\"\"\r\n}\r\n\r\nconst loginReducer = (state:HotelState = initialState, action:AnyAction): HotelState => {\r\n\tswitch(action.type) {\r\n\t\tcase actionConstants.LOADING:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading:true,\r\n\t\t\t\terror:\"\"\r\n\t\t\t}\r\n\t\tcase actionConstants.STOP_LOADING:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading:false,\r\n\t\t\t\terror:\"\"\r\n\t\t\t}\r\n\t\tcase actionConstants.FETCH_HOTELS_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\tlist:action.list,\r\n\t\t\t\tloading:false,\r\n\t\t\t\terror:\"\"\r\n\t\t\t}\r\n\t\tcase actionConstants.FETCH_HOTELS_FAILED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading:false,\r\n\t\t\t\terror:action.error\r\n\t\t\t}\t\t\r\n\t\tcase actionConstants.ADD_HOTEL_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading:false,\r\n\t\t\t\terror:\"\"\r\n\t\t\t}\r\n\t\tcase actionConstants.ADD_HOTEL_FAILED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading:false,\r\n\t\t\t\terror:action.error\r\n\t\t\t}\r\n\t\tcase actionConstants.REMOVE_HOTEL_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading:false,\r\n\t\t\t\terror:\"\"\r\n\t\t\t}\r\n\t\tcase actionConstants.REMOVE_HOTEL_FAILED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading:false,\r\n\t\t\t\terror:action.error\r\n\t\t\t}\r\n\t\tcase actionConstants.EDIT_HOTEL_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading:false,\r\n\t\t\t\terror:\"\"\r\n\t\t\t}\r\n\t\tcase actionConstants.EDIT_HOTEL_FAILED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading:false,\r\n\t\t\t\terror:action.error\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default loginReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\nimport {createStore, applyMiddleware, Store, AnyAction} from 'redux';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {HotelState} from './reducers/stateTypes';\nimport hotelReducer from './reducers/hotelReducer';\n\n\nconst store:Store<HotelState, AnyAction> = createStore(hotelReducer,applyMiddleware(thunk));\n\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store={store}>\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}